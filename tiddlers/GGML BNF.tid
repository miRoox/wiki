aliases: GBNF
created: 20241222140958724
creator: miRoox
modified: 20241229151755198
modifier: miRoox
tags: 巴科斯-诺尔范式 TODO 形式文法
title: GGML BNF
tmap.id: e2abc66f-d990-4e54-9928-7e922450da3e
type: text/vnd.tiddlywiki

GGML BNF（GBNF）是一种用于约束[[llama.cpp]]中模型输出的[[形式文法]]描述。

!! 定义

* [[非终结符|?]]（规则名称）代表终结符和其他非终结符的模式。它们必须是带破折号的小写单词。
* [[终结符|?]]是实际的字符（[[码点]]）它们可以指定为[[字符串]]（如 `"1"` 或 `"O-O"` ）或字符范围（如 `[1-9]`  或 ）`[NBKQR]`。
** 终结符支持所有的[[Unicode]]字符。Unicode 字符可以直接在语法中指定，例如 `[ぁ-ゟ]`，或使用转义符：8 位 ( `\xXX` )、16 位 ( `\uXXXX` ) 或 32 位 ( `\UXXXXXXXX` )。

!!! 生成规则

生成规则指出如何使用终结符和非终结符序列替换特定的非终结符。
每一条生成规则的基本格式是。`non-terminal ::= sequence...`

* 生成规则中序列的顺序决定了匹配的顺序。`a b c`意味着一定是`a`先匹配，`b`再匹配，最后`c`来匹配。
* `|`表示可替代的组合，给出可接受的不同序列。`a | b`意味着`a`或`b`中任意一种匹配即可。
* 括号`(` `)`可用于对序列进行分组，从而允许在更大的规则中嵌入替代方案或将重复和可选符号（如下）应用于序列。
* 重复和可选：
** `*`位于符号或序列之后，表示它可以重复零次或多次（相当于`{0,}`）。
**`+`表示该符号或序列应该出现一次或多次（相当于`{1,}`）。
** `?`使前面的符号或序列成为可选的（相当于`{0,1}`）。
** `{m}`重复前面的符号或序列恰好m次
** `{m,}`重复前面的符号或序列至少m次
** `{m,n`}重复前面的符号或序列至m次n（含）
** `{0,n}`重复前面的符号或序列最n多次（含）

[[注释|计算机：注释]]：可以在行首使用`#`添加注释

在完整语法中，`root`对应规则始终定义文法的起点。换句话说，它指定整个输出必须匹配的内容。

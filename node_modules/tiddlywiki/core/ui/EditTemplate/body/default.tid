title: $:/core/ui/EditTemplate/body/default

\define config-visibility-title()
$:/config/EditorToolbarButtons/Visibility/$(currentTiddler)$
\end

\define importFileActions()
<$action-popup $state=<<importState>> $coords="(0,0,0,0)" $floating="yes"/>
\end

\whitespace trim
<$let
	editPreviewStateTiddler={{{ [{$:/config/ShowEditPreview/PerTiddler}!match[yes]then[$:/state/showeditpreview]] :else[<qualify "$:/state/showeditpreview">] }}}
	importTitle=<<qualify $:/ImportImage>>
	importState=<<qualify $:/state/ImportImage>> >
<$dropzone importTitle=<<importTitle>> autoOpenOnImport="no" contentTypesFilter={{$:/config/Editor/ImportContentTypesFilter}} class="tc-dropzone-editor" enable={{{ [{$:/config/DragAndDrop/Enable}match[no]] :else[subfilter{$:/config/Editor/EnableImportFilter}then[yes]else[no]] }}} filesOnly="yes" actions=<<importFileActions>> >
<div>
<div class={{{ [<editPreviewStateTiddler>get[text]match[yes]then[tc-tiddler-preview]else[tc-tiddler-preview-hidden]] [[tc-tiddler-editor]] +[join[ ]] }}}>

<$transclude tiddler="$:/core/ui/EditTemplate/body/editor" mode="inline"/>

<$list filter="[<editPreviewStateTiddler>get[text]match[yes]]" variable="ignore">

<div class="tc-tiddler-preview-preview" data-tiddler-title={{!!draft.title}} data-tags={{!!tags}}>

<$transclude tiddler={{$:/state/editpreviewtype}} mode="inline">

<$transclude tiddler="$:/core/ui/EditTemplate/body/preview/output" mode="inline"/>

</$transclude>

</div>

</$list>

</div>

</div>

</$dropzone>

</$let>
